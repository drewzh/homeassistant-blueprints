blueprint:
  name: Motion Activated Lights
  description: >
    Simple motion-activated lights with Adaptive Lighting integration. 
    Supports optional blocking entity (e.g., sleep mode) and configurable timeout.
  domain: automation
  input:
    motion_sensor:
      name: Motion Sensor
      description: "Select the motion sensor that will trigger the automation."
      selector:
        entity:
          domain: binary_sensor

    lights:
      name: Lights
      description: "Lights to turn on when motion is detected."
      selector:
        target:
          entity:
            domain: light

    timeout:
      name: Timeout (seconds)
      description: >
        Number of seconds to wait after motion is cleared before turning lights off.
        If motion is detected again during this time, the countdown resets.
      default: 120
      selector:
        number:
          min: 1
          max: 3600
          unit_of_measurement: seconds
          mode: box

    block_entity:
      name: Blocking Entity (Optional)
      description: >
        If defined, the lights won't turn on when this entity is in a blocking state (e.g. 'on').
        For example, you can use a sleep mode switch. Leave empty to ignore.
      selector:
        entity: {}
      default: ""

mode: restart
max_exceeded: silent

#############################################################
# 1) Trigger: When motion_sensor goes from off -> on
#############################################################
trigger:
  - platform: state
    entity_id: !input motion_sensor
    from: "off"
    to: "on"

#############################################################
# 2) Variables: Make the input references easier to use
#############################################################
variables:
  motion_sensor: !input motion_sensor
  lights: !input lights
  timeout: !input timeout
  block_entity: !input block_entity

#############################################################
# 3) Condition: Check the blocking entity if itâ€™s set
#############################################################
condition:
  - condition: template
    value_template: >
      {{ block_entity == '' or not is_state(block_entity, 'on') }}

#############################################################
# 4) Action Steps
#############################################################
action:
  ###########################################################
  # Step A: Turn on the lights
  ###########################################################
  - service: light.turn_on
    target: "{{ lights }}"

  ###########################################################
  # Step B: Wait for motion to clear for the specified duration
  ###########################################################
  - wait_for_trigger:
      - platform: state
        entity_id: "{{ motion_sensor }}"
        from: "on"
        to: "off"
        for:
          seconds: "{{ timeout }}"

  ###########################################################
  # Step C: Turn off lights (only if motion is still clear)
  ###########################################################
  - condition: state
    entity_id: !input motion_sensor
    state: "off"

  - service: light.turn_off
    target: "{{ lights }}"
